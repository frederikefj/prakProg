
###############[ A ]###############

the global optimizer have been implemented in optimization.cs

The function globalMini.quasiRandomMin takes a function, a square
area and a time. The function uses quasirandom numbers to look for a
global minimum for the given time and then uses the quasi-random 
minimizer to find the local minimum around that.

For a simple test of the global optimizer a sum of narrow guassian functions is used.
The negatice gaussian functions are narrow enough that the global minimum is about
at the "peak" of the largest guassian in each dimension. x: (1, 2, 3, 4)

The function is sampled for 1 seconds and the quasi-Newton minimizer
was given an accuarcy of 1e-6. 
Minimum is found at x: (1.00000000240922,1.99983182177784, 2.99977557784986, 3.99974741809385)
(The minimum is not excactly at (1,2,3,4) since the guassian functions overlap)



###############[ B ]###############

An option to use the downhill simplex algoritm as a local minimizer has been added

Another function with a large number of local minimum is minus
the distance from the nearest point (or wall)in a group of random
numbers
The function is sampled for 5 seconds and the downhill simplex minimizer
was given an accuarcy of 1e-6.
Minimum is found at x: (0.571410063875312,0.612425605731229)
where f = -0.076675257412675
A plot of the points and minimum is shown in "points.svg"

